name: Build Android App
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache Buildozer dependencies
      uses: actions/cache@v3
      with:
        path: .buildozer_cache
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          build-essential \
          git \
          python3 \
          python3-dev \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0 \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          build-essential \
          libsqlite3-dev \
          sqlite3 \
          bzip2 \
          libbz2-dev \
          zlib1g-dev \
          libssl-dev \
          openssl \
          libgdbm-dev \
          libgdbm-compat-dev \
          liblzma-dev \
          libreadline-dev \
          libncursesw5-dev \
          libffi-dev \
          uuid-dev \
          libcurl4-openssl-dev

    - name: Install Buildozer
      run: |
        python -m pip install --upgrade pip
        pip install buildozer
        pip install Cython==0.29.33

    - name: Install Android SDK & NDK
      run: |
        sudo apt-get install -y wget unzip
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip commandlinetools-linux-*_latest.zip
        mkdir -p android-sdk/cmdline-tools
        mv cmdline-tools android-sdk/cmdline-tools/latest
        rm commandlinetools-linux-*_latest.zip
        echo "ANDROID_HOME=$GITHUB_WORKSPACE/android-sdk" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        
    - name: Accept Android SDK licenses
      run: yes | sdkmanager --licenses

    - name: Build Android APK
      run: |
        buildozer android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: bin/*.apk

    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
